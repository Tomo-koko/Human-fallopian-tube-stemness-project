# Library
library(tidyverse)
library(biomaRt)

# Fix seed and figure font
set.seed(42)
theme_set(theme_gray(base_family = "Arial"))

# Download our bulk-RNA-seq data from GEO database
# GSE274309
url_pkh <- "https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE274309&format=file&file=GSE274309%5FTPM%2Ecsv%2Egz"
output_file_pkh_gz <- "GSE274309_TPM.csv.gz"
download.file(url_pkh, destfile = output_file_pkh_gz)
bulk_pkh <- read_csv(gzfile(output_file_pkh_gz))

# Check the csv file
head(bulk_pkh)
##  A tibble: 6 Ã— 3
##   Gene_Symbol `PKH-R3(retained)_TPM` `PKH-R6(reduced)_TPM`
##   <chr>                        <dbl>                 <dbl>
## 1 A2M                          0.183                0.0922
## 2 NAT1                        18.1                 20.1   
## 3 NAT2                         0.104                0.393 
## 4 SERPINA3                    20.0                  2.72  
## 5 AAMP                       167.                 204.    
## 6 AARS1                       66.7                 94.0   

# Calculate the Ret/Red after adding very small number (0.01) to the tpm values in order to avoid "division by zero"
bulk_pkh <- bulk_pkh %>%
  mutate(`Normalized Ret/Red` = (`PKH-R3(retained)_TPM` + 0.01) / (`PKH-R6(reduced)_TPM` + 0.01))

# Plot (x, y) = (log[PKH-R3(retained)_TPM], log[Normalized Ret/Red]) in the first quadrant
bulk_pkh_filtered <- bulk_pkh %>%
  filter(`PKH-R3(retained)_TPM` > 1, `Normalized Ret/Red` > 1)
bulk_pkh_filtered <- bulk_pkh_filtered %>%
  mutate(
    `log[PKH26-retained_TPM]` = log10(`PKH-R3(retained)_TPM`),
    `log[Normalized Ret/Red]` = log10(`Normalized Ret/Red`)
  )
max_x <- max(bulk_pkh_filtered$`log[PKH26-retained_TPM]`, na.rm = TRUE)
max_y <- max(bulk_pkh_filtered$`log[Normalized Ret/Red]`, na.rm = TRUE)
ggplot(bulk_pkh_filtered, aes(x = `log[PKH26-retained_TPM]`, y = `log[Normalized Ret/Red]`)) +
  geom_point(color = "blue", alpha = 0.7) + 
  geom_function(
    fun = function(x) 2 / x,  
    color = "red",
    linetype = "dashed"
  ) +
  scale_x_continuous(limits = c(0, max_x)) +  
  scale_y_continuous(limits = c(0, max_y)) +  
  labs(
    title = "Scatter Plot",
    x = "log[PKH26-retained_TPM]",
    y = "log[Normalized Ret/Red]"
  ) +
  theme_minimal() +  
  theme(
    plot.title = element_text(hjust = 0.5)  
  )

# Extract the important genes by the inequality [log[PKH26-retained_TPM]*log[Normalized Ret/Red]] > 2
important_genes <- bulk_pkh_filtered %>%
  mutate(
    theoretical_y = 2 / `log[PKH26-retained_TPM]` 
  ) %>%
  filter(`log[Normalized Ret/Red]` > theoretical_y)  
head(important_genes)

ensembl <- useEnsembl("ENSEMBL_MART_ENSEMBL", dataset = "hsapiens_gene_ensembl", version = 113)
important_gene_symbols <- important_genes$Gene_Symbol 
important_ensembl_ids <- getBM(attributes = c("hgnc_symbol", "ensembl_gene_id"), 
                     filters = "hgnc_symbol", 
                     values = important_gene_symbols, 
                     mart = ensembl)

# Define Domancy_gene_set
genesets <- list(
  Dormancy_gene_set = important_ensembl_ids$ensembl_gene_id
)
