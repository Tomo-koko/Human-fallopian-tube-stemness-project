# Library
library(hdf5r)
library(Seurat)
library(cowplot)
library(reshape2)
library(RColorBrewer)
library(gplots)
library(viridis)
library(tidyverse)
library(lme4)
library(limma)
library(S4Vectors)
library(BiocGenerics)
library(DelayedArray)
library(DelayedMatrixStats)
library(SingleCellExperiment)
library(SummarizedExperiment)
library(batchelor)
library(HDF5Array)
library(terra)
library(ggrastr)
library(monocle3)

# Fix seed and figure font
set.seed(42)
theme_set(theme_gray(base_family = "Arial"))

# Load scRNA-seq data by Lengyel et al
url_len <- "https://datasets.cellxgene.cziscience.com/9e7dd889-c863-46f9-9ab9-99175e23fd75.rds"
output_file_len <- "9e7dd889-c863-46f9-9ab9-99175e23fd75.rds"
download.file(url_len, destfile = output_file_len)
sc_len <- readRDS(output_file_len)

# Extract epithelial cells by the expression of EpCAM (ENSG00000119888)
sc_len@meta.data$cell_type <- NULL
expression_EpCAM_len <- FetchData(sc_len, vars = c("ENSG00000119888"))
ggplot(expression_EpCAM_len, aes(x = "", y = ENSG00000119888)) + 
  geom_violin(fill = "skyblue", color = "black", alpha = 0.5) + 
  geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.1, color = "red") + 
  scale_y_continuous(breaks = seq(0, max(expression_EpCAM_len$ENSG00000119888), by = 0.1)) +    
  labs(
    title = "Expression of EpCAM",
    y = "Expression Level"
  ) +
  theme_minimal() +
  theme(axis.title.x = element_blank()) 

  ## Threshold to define epithelial cells: the expression of EpCAM >= 1
  counts_data_len <- sc_len@assays$RNA@counts
  cells_to_keep_len <- colnames(counts_data_len)[counts_data_len["ENSG00000119888", ] >= 1]
  epi_filter_len <- subset(sc_len, cells = cells_to_keep_len)

# Prepare some objects for monocle3 analysis
counts_len <- GetAssayData(epi_filter_len, assay = "RNA", layer = "counts")
gene_metadata <- data.frame(gene_short_name = rownames(counts_len))
rownames(gene_metadata) <- rownames(counts_len)
meta_data_len <- epi_filter_len@meta.data
cds_len <- new_cell_data_set(
  counts_len,
  cell_metadata = meta_data_len,
  gene_metadata = gene_metadata
)

# monocle3 analysis
cds_len <- preprocess_cds(cds_len, num_dim = 50, method = "PCA")
cds_len <- reduce_dimension(cds_len, preprocess_method = "PCA", reduction_method = "UMAP")
cds_len <- cluster_cells(cds_len, reduction_method = "UMAP")
cds_len <- learn_graph(cds_len, close_loop = FALSE)

# Attach the UMAP result to the Seurat Object
umap_coords_len <- reducedDims(cds_len)$UMAP
umap_coords_df_len <- as.data.frame(umap_coords_len)
colnames(umap_coords_df_len) <- c("UMAP_1", "UMAP_2")
umap_coords_df_len$cell_id <- rownames(umap_coords_len)
umap_coords_df_len <- umap_coords_df_len[match(rownames(epi_filter_len@meta.data), umap_coords_df_len$cell_id), ]
epi_filter_len[["monocle3_UMAP"]] <- CreateDimReducObject(
  embeddings = as.matrix(umap_coords_df_len[, c("UMAP_1", "UMAP_2")]),
  key = "monUMAP_",
  assay = DefaultAssay(epi_filter_len)
)

# Attach the cluster information to the Seurat Object
monocle_clusters_len <- clusters(cds_len)
monocle_clusters_len <- monocle_clusters_len[rownames(epi_filter_len@meta.data)]
epi_filter_len@meta.data$monocle3_clusters <- monocle_clusters_len

# Plot UMAP
DimPlot(epi_filter_len, reduction = "monocle3_UMAP", group.by = "monocle3_clusters", label = TRUE)
DimPlot(epi_filter_len, reduction = "monocle3_UMAP", group.by = "donor_id", label = TRUE)

# Define Domancy Gene Set
genesets <- list(Dormancy_gene_set = c

# Run escape to execute single-cell enrichment analysis
ES.epi_filter_len <- escape.matrix(epi_filter_len, 
                                   method = "ssGSEA",
                                   gene.sets = genesets, 
                                   groups = 3000, 
                                   min.size = 5
                                   )

epi_filter_len <- AddMetaData(epi_filter_len, metadata = ES.epi_filter_len)
FeaturePlot(epi_filter_len, reduction = "monocle3_UMAP", features = colnames(ES.epi_filter_len), cols = c("green", "red"))
VlnPlot(epi_filter_len, group.by = "monocle3_clusters", features = colnames(ES.epi_filter_len))

# Calculate pseudotime
cds_len <- order_cells(cds_len)  ## define cluster XX as a start point 
plot_cells(cds_len,
           color_cells_by = "pseudotime",
           label_cell_groups= FALSE,
           label_leaves= FALSE,
           label_branch_points= FALSE,
           graph_label_size= 1.5)
