
# Fix seed
set.seed(42)

# Extract the expression of the key genes in dormancy in our bulk RNA-seq result
bulk_key_genes <- bulk_pkh %>%
  filter(Gene_Symbol %in% Key_Genes_in_Dormancy_List$hgnc_symbol)
bulk_key_genes <- bulk_key_genes %>%
  arrange(desc(`PKH-R3(retained)_TPM`))
bulk_key_genes
# A tibble: 14 Ã— 4
##    Gene_Symbol `PKH-R3(retained)_TPM` `PKH-R6(reduced)_TPM` `Normalized Ret/Red`
##    <chr>                        <dbl>                 <dbl>                <dbl>
##  1 LCN2                        3451.               1104.                   3.13 
##  2 CXCL2                        956.                327.                   2.92 
##  3 C3                           679.                212.                   3.20 
##  4 VCL                          179.                149.                   1.21 
##  5 NCOA7                        169.                 59.0                  2.87 
##  6 IL4I1                        153.                 12.5                 12.3  
##  7 MYO1C                        144.                109.                   1.32 
##  8 TNFRSF10B                    137.                 96.0                  1.43 
##  9 IFI16                         84.7                61.9                  1.37 
## 10 ARPC5                         75.1                69.0                  1.09 
## 11 BCL3                          30.2                32.2                  0.937
## 12 NFKBID                        23.9                12.6                  1.89 
## 13 KCNK15                        19.7                 0.918               21.3  
## 14 FAM107A                       18.4                14.4                  1.28 

# We focused on LCN2 as the most prominent key gene in the stemness of fallopian tube epithelium

# Appendix
LCN2_id <- "ENSG00000148346"

expr_len <- as.numeric(df_len[LCN2_id, ])
expr_ul <- as.numeric(df_ul[LCN2_id, ])

ns_basis_len <- naturalSpline(pseudotime_len, df = 3)
ns_basis_ul <- naturalSpline(pseudotime_ul, df = 3)

model_len <- glm(expr_len ~ ns_basis_len)
model_ul <- glm(expr_ul ~ ns_basis_ul)

coef_len <- c(model_len$coefficients["ns_basis_len1"], model_len$coefficients["ns_basis_len2"], model_len$coefficients["ns_basis_len3"])
intercept_len <- model_len$coefficients["(Intercept)"]
coef_ul <- c(model_ul$coefficients["ns_basis_ul1"], model_ul$coefficients["ns_basis_ul2"], model_ul$coefficients["ns_basis_ul3"])
intercept_ul <- model_ul$coefficients["(Intercept)"]

fitted_values_len <- as.vector(ns_basis_len %*% coef_len)
fitted_values_len <- fitted_values_len + intercept_len
fitted_values_ul <- as.vector(ns_basis_ul %*% coef_ul)
fitted_values_ul <- fitted_values_ul + intercept_ul

plot_data_len <- data.frame(pseudotime = pseudotime_len,
                            expression = expr_len,
                            fitted = fitted_values_len) 

plot_data_ul <- data.frame(pseudotime = pseudotime_ul, 
                           expression = expr_ul,
                           fitted = fitted_values_ul) 

ggplot(plot_data_len, aes(x = pseudotime)) +  
  geom_line(aes(y = fitted), color = "blue") + 
  geom_point(aes(y = expression), color = "red") +
  labs(title = paste("Spline Fit: LCN2 [Lengyel et al]"),
       x = "Pseudotime",
       y = "Normalized LCN2 Expression") +
  theme_minimal()

pdf("~/output/LCN2_spline_len.pdf", width = 8, height = 8)
ggplot(plot_data_len, aes(x = pseudotime)) +  
  geom_line(aes(y = fitted), color = "blue") + 
  geom_point(aes(y = expression), color = "red") +
  labs(title = paste("Spline Fit: LCN2 [Lengyel et al]"),
       x = "Pseudotime",
       y = "Normalized LCN2 Expression") +
  theme_minimal()
dev.off()

ggplot(plot_data_ul, aes(x = pseudotime)) +
  geom_line(aes(y = fitted), color = "blue") +   
  geom_point(aes(y = expression), color = "red") +
  labs(title = paste("Spline Fit: LCN2 [Ulrich et al]"),
       x = "Pseudotime",
       y = "Normalized LCN2 Expression") +
  theme_minimal()

pdf("~/output/LCN2_spline_ul.pdf", width = 8, height = 8)
ggplot(plot_data_ul, aes(x = pseudotime)) +
  geom_line(aes(y = fitted), color = "blue") +   
  geom_point(aes(y = expression), color = "red") +
  labs(title = paste("Spline Fit: LCN2 [Ulrich et al]"),
       x = "Pseudotime",
       y = "Normalized LCN2 Expression") +
  theme_minimal()
dev.off()
